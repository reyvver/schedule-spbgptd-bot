from typing import List

abbreviation = "–ë–ú¬ª ‚Äî —É–ª. –ë–æ–ª—å—à–∞—è –ú–æ—Ä—Å–∫–∞—è, –¥.18\n" \
               "¬´–î¬ª ‚Äî –ø–µ—Ä. –î–∂–∞–º–±—É–ª–∞, –¥.13\n" \
               "¬´–í¬ª ‚Äî –í–æ–∑–Ω–µ—Å–µ–Ω—Å–∫–∏–π –ø—Ä., –¥.46\n" \
               "¬´–ú¬ª ‚Äî –ú–æ—Ö–æ–≤–∞—è —É–ª., –¥.26\n" \
               "'–î–û' ‚Äì –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ"

help_text = "–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –≤—É–∑–∞ –°–ü–ë–ì–£–ü–¢–î.\n\n" \
            "–î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â–∏–º–∏—Å—è –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º." \
            "–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ *–ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞* –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã */start* \n\n" \
            "–ï—Å–ª–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±—ã–ª–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω–∞ *–≥—Ä—É–ø–ø–∞*, —Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å –µ–µ –º–æ–∂–Ω–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∏–ª–∏ —Å –ø–æ–º–æ—â—å—é " \
            "–∫–æ–º–∞–Ω–¥—ã */set_group* \n\n" \
            "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –Ω–∞ –ø–æ—á—Ç—É\n‚û°   tvdragunvova@mail.ru"

set_up = "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! ‚ú®\n\n" \
         "–ï—Å–ª–∏ –Ω–∞—à–ª–∏ –æ—à–∏–±–∫—É –∏–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –Ω–∞ –ø–æ—á—Ç—É\n ‚û°   tvdragunvova@mail.ru"
return_to_main_menu = "–ö–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏?"

start_text = "–ö—Ä—É—Ç–∏–º —à–µ—Å—Ç–µ—Ä–µ–Ω–∫–∞–º–∏.. ‚öô Done!\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –≥—Ä—É–ø–ø—É ‚¨á\n"
registration_text = "–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ —Å–Ω–∏–∑—É"
view_type_text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø ‚¨á\n\n1Ô∏è‚É£   *–ü–æ–ª–Ω–æ–µ:* –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Å—Ç–æ–ª–±–∏–∫ \n\n2Ô∏è‚É£   *–ö–æ—Ä–æ—Ç–∫–æ–µ:* " \
                 "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Å—Ç—Ä–æ—á–∫—É"

text_timetable = ['üìå –°–µ–≥–æ–¥–Ω—è', 'üìã –ó–∞–≤—Ç—Ä–∞', 'üìç –≠—Ç–∞ –Ω–µ–¥–µ–ª—è', 'üìÖ –°–ª–µ–¥—É—é—â–∞—è', 'üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏']
query_timetable = ["main_today", "main_tomorrow", "main_current", "main_next"]
query_show_settings = "main_settings"

text_settings = ['‚ùì –ü–æ–º–æ—â—å', 'üë•  –°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É', 'üßæ –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è', '‚¨Ö  –ù–∞–∑–∞–¥']
query_settings = ["help", "change_group", "change_view_type", "go_back"]

text_view_type = ['1Ô∏è‚É£   –ü–æ–ª–Ω–æ–µ', '2Ô∏è‚É£   –ö–æ—Ä–æ—Ç–∫–æ–µ']
query_view_type = ["full", "short"]

days_of_week = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"]
emoji = ["\U0001F4D5", "\U0001F4D7", "\U0001F4D8", "\U0001F4D9", "\U0001F4D2", "\U0001F4D4"]

statistics_keyword = "statistic_hello_kitty"
# =================================================================================================================

space = "      "


def edit_date_number(number: int):
    if number < 10:
        return "0" + str(number)
    else:
        return str(number)


def get_full_timetable(data: dict):
    data["name"] = edit_string(data["name"])

    result = space + "‚è∞ _" + data["time"] + "_\n" + \
             space + "üñç " + data["name"] + "\n" + \
             space + "üè´ " + data["location"] + "\n" +\
             space + data["group"] + "\n"

    return "\n" + result


def get_short_timetable(data: dict):
    result = "‚è∞ *" + data["time"] + "* - " + data["name"] + "\n" + \
             space + data["location"] + " " + data["group"]

    return "\n" + result


def edit_string(text: str):
    result: str = ""
    lines: List = [""]
    line_index = 0
    count = len(text)

    if count <= 31:
        return text

    words = text.split(' ')

    for el in words:
        if el == ' ':
            return
        if len(lines[line_index]) + len(el) <= 31:
            lines[line_index] += el + " "
        else:
            line_index += 1
            lines.append(el + " ")

    result += lines[0]

    for index in range(len(lines)):
        if index != 0:
            result += "\n" + space + lines[index]

    return result

